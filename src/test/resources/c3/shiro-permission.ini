[users]
zhang=123,role1,role2
wang=123,role1
li=123,role41,role42,role51,role52,role53,role61,role62,role71,role72,role73,role74,role75,role81,role82

#规则：“用户名=密码，角色1，角色2”“角色=权限1，权限2”，即首先根据用户名找到角色，然后根据角色再找到权限；
#即角色是权限集合；Shiro同样不进行权限的维护，需要我们通过Realm返回相应的权限信息。
#只需要维护“用户——角色”之间的关系即可。


#规则：“资源标识符：操作：对象实例ID”  即对哪个资源的哪个实例可以进行什么操作。
#其默认支持通配符权限字符串，“:”表示资源/操作/实例的分割；“,”表示操作的分割；“*”表示任意资源/操作/实例。
[roles]
#对资源user拥有create、update权限
role1=user:create,user:update
#对资源user拥有create、delete权限
role2=user:create,user:delete
#对资源system:user拥有create权限
role3=system:user:create

#对资源system:user拥有update、delete权限
role41=system:user:update,system:user:delete
#对资源user拥有update、delete权限（简写，但不等价）
role42="system:user:update,delete"

#对资源system:user拥有create、update、delete、view权限
role51="system:user:create,update,delete,view"
#对资源system:user拥有所有权限create,update,delete,view
role52=system:user:*
#对资源system:user拥有所有权限
role53=system:user

#对资源拥有所有权限（如匹配user:view）
role61=*:view
#对资源拥有所有权限（如匹配system:user:view，即和之上的不等价）
role62=*:*:view

##实例级别的权限

#对资源user的1实例拥有view权限
role71=user:view:1
#对资源user的1实例拥有update、delete权限
role72="user:update,delete:1"
#对资源user的1实例拥有所有权限
role73=user:*:1
#对资源user的所有实例拥有auth权限
role74=user:auth:*
#对资源user的所有实例拥有所有权限
role75=user:*:*

#等价于menu:*:*
role81=menu:*
role82=organization

